{"version":3,"sources":["services/apiConfig.js","components/shared/Nav.jsx","components/shared/Footer.jsx","components/shared/Layout.jsx","components/Home.jsx","components/Recipe.jsx","services/recipe.js","components/Recipes.jsx","components/RecipeCreate.jsx","components/RecipeEdit.jsx","components/RecipeDetail.jsx","services/user.js","components/SignUp.jsx","components/SignIn.jsx","components/SignOut.jsx","App.jsx","serviceWorker.js","index.js"],"names":["apiUrl","authenticatedOptions","className","to","unauthenticatedOptions","alwaysOptions","Nav","user","username","Footer","Layout","props","children","Home","Recipe","_id","src","img","alt","name","jsonWebToken","localStorage","getItem","console","log","apiUrls","window","location","hostname","api","axios","create","baseURL","headers","Authorization","getRecipes","a","get","response","data","getRecipe","id","createRecipe","recipe","post","updateRecipe","put","deleteRecipe","delete","Recipes","handleSubmit","event","preventDefault","state","recipes","this","setState","RECIPES","filteredRecipes","map","index","price","key","Component","RecipeCreate","handleChange","target","value","created","ingredients","instructions","onSubmit","placeholder","required","autoFocus","onChange","type","RecipeEdit","match","params","updated","RecipeDetail","description","onClick","signUp","credentials","resp","setItem","token","signIn","signOut","clear","verifyUser","res","SignUp","onSignUp","history","setUser","then","push","catch","error","password","passwordConfirmation","isError","errorMsg","renderError","toggleForm","email","SignIn","onSignIn","SignOut","clearUser","finally","App","exact","path","render","Boolean","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.cf257f41.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst jsonWebToken = localStorage.getItem('token') || null\nconsole.log(\"JWT: \", jsonWebToken)\n\nlet apiUrl\n\nconst apiUrls = {\n    production: 'http://my-recipe-book-1.herokuapp.com/api',\n    development: 'http://localhost:3000/api'\n}\n\nif (window.location.hostname === 'localhost') {\n    apiUrl = apiUrls.development\n} else {\n    apiUrl = apiUrls.production\n}\n\nconst api = axios.create({\n  baseURL: apiUrl,\n    headers: {\n        Authorization: `Bearer ${jsonWebToken}`,\n        'Access-Control-Allow-Origin': '*'\n    }\n})\n\nexport default api","import React from 'react'\nimport './Nav.css'\nimport { NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = (\n    <>\n        <NavLink className=\"link\" to=\"/add-recipe\">Add Recipe</NavLink>\n        <NavLink className=\"link\" to=\"/sign-out\">Sign Out</NavLink>\n    </>\n)\n\nconst unauthenticatedOptions = (\n    <>\n        <NavLink className=\"link\" to=\"/sign-up\">Sign Up</NavLink>\n        <NavLink className=\"link\" to=\"/sign-in\">Sign In</NavLink>\n    </>\n)\n\nconst alwaysOptions = (\n    <>\n        <NavLink className=\"link\" to=\"/recipes\">Recipes</NavLink>\n    </>\n)\n\nconst Nav = ({ user }) => {\n        return (\n            <nav>\n                <div className=\"nav\">\n                    <NavLink className=\"logo\" to=\"/\">My Recipe Book</NavLink>\n                    <div className=\"links\">\n                        {user && <div className=\"link welcome\">Welcome, {user.username}</div>}\n                        {alwaysOptions}\n                        {user ? authenticatedOptions : unauthenticatedOptions}\n                    </div>\n                </div>\n            </nav>\n        )\n}\n\nexport default Nav","import React from 'react'\nimport './Footer.css'\n\nconst Footer = () =>\n    <footer></footer>\n\nexport default Footer","import React from 'react'\nimport './Layout.css'\nimport Nav from './Nav'\nimport Footer from './Footer'\n\nconst Layout = (props) => (\n    <div className='layout'>\n        <Nav user={props.user} />\n        <div className=\"layout-children\">\n            {props.children}\n        </div>\n        <Footer />\n    </div>\n)\n\nexport default Layout","import React from 'react'\nimport './Home.css'\nimport Layout from './shared/Layout'\n\nconst Home = (props) => {\n  return (\n    <Layout user={props.user}>\n      <div className=\"home\">\n      </div>\n    </Layout>\n  )\n}\n\nexport default Home","import React from 'react';\n// import './Recipe.css';\nimport { Link } from 'react-router-dom'\nconst Recipe = (props) => {\n    return (\n        <>\n            <Link className=\"recipe\" to={`/recipes/${props._id}`}>\n                <img className=\"recipe-image\" src={props.img} alt={props.name} />\n                <div className=\"recipe-name\">{props.name}</div>\n            </Link>\n        </>\n    )\n}\nexport default Recipe","import api from './apiConfig'\n\nexport const getRecipes = async () => {\n  try {\n      const response = await api.get('/recipes')\n      return response.data\n  } catch (error) {\n      throw error\n  }\n}\n\nexport const getRecipe = async id => {\n  try {\n      const response = await api.get(`/recipes/${id}`)\n      return response.data\n  } catch (error) {\n      throw error\n  }\n}\n\nexport const createRecipe = async recipe => {\n  try {\n      const response = await api.post('/recipes', recipe)\n      return response.data\n  } catch (error) {\n      throw error\n  }\n}\n\nexport const updateRecipe = async (id, recipe) => {\n  try {\n      const response = await api.put(`/recipes/${id}`, recipe)\n      return response.data\n  } catch (error) {\n      throw error\n  }\n}\n\nexport const deleteRecipe = async id => {\n  try {\n      const response = await api.delete(`/recipes/${id}`)\n      return response.data\n  } catch (error) {\n      throw error\n  }\n}","import React, { Component } from 'react'\nimport './Recipes.css'\nimport Recipe from './Recipe'\n// import Search from './Search'\n// import { AZ, ZA, lowestFirst, highestFirst } from \"./Sort\"\nimport Layout from './shared/Layout'\nimport { getRecipes } from '../services/recipe'\n\nclass Recipes extends Component {\n  constructor() {\n    super()\n    this.state = {\n      recipes: [],\n      // filterValue: '',\n      // filteredrecipes: null,\n      // selectValue: 'Featured'\n    }\n  }\n\n  async componentDidMount() {\n    const recipes = await getRecipes()\n    this.setState({ recipes })\n  }\n\n  // handleSearchChange = event => {\n  //   const filter = () => {\n  //     const filteredrecipes = this.state.recipes.filter(recipe => {\n  //       return recipe.name.toLowerCase().includes(this.state.filterValue.toLowerCase())\n  //     })\n  //     this.setState({ filteredrecipes })\n  //   }\n  //   this.setState({ filterValue: event.target.value }, filter)\n  // }\n\n  // handleSortChange = event => {\n  //   this.setState({ selectValue: event.target.value });\n  //   let input = event.target.value; // a-z\n  //   const { recipes } = this.state;\n  //   switch (input) {\n  //     case \"name-ascending\":\n  //       this.setState({\n  //         recipes: AZ(recipes)\n  //       });\n  //       break;\n  //     case \"name-descending\":\n  //       this.setState({\n  //         recipes: ZA(recipes)\n  //       });\n  //       break;\n  //     case \"price-ascending\":\n  //       this.setState({\n  //         recipes: lowestFirst(recipes)\n  //       });\n  //       break;\n  //     case \"price-descending\":\n  //       this.setState({\n  //         recipes: highestFirst(recipes)\n  //       });\n  //       break;\n  //     default:\n  //       break\n  //   }\n  // }\n\n  handleSubmit = event => event.preventDefault()\n\n  render() {\n    const recipes = this.state.filteredRecipes ? this.state.filteredRecipes : this.state.recipes\n    const RECIPES = recipes.map((recipe, index) =>\n      <Recipe _id={recipe._id} name={recipe.name} img={recipe.img} price={recipe.price} key={index} />\n    )\n\n    return (\n      <Layout user={this.props.user}>\n        {/* <Search onSubmit={this.handleSubmit} value={this.state.filterValue} onChange={this.handleSearchChange} />\n        <form className=\"sort-container\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"sort\">SORT BY:</label>\n          <select className=\"sort\" value={this.state.selectValue} onChange={this.handleSortChange}>\n            <option className=\"option\" value=\"name-ascending\" >&nbsp; Alphabetically, A-Z &nbsp;</option>\n            <option value=\"name-descending\">&nbsp; Alphabetically, Z-A &nbsp;</option>\n            <option value=\"price-ascending\">&nbsp; Price, low to high &nbsp;</option>\n            <option value=\"price-descending\">&nbsp; Price, high to low &nbsp;</option>\n          </select>\n        </form> */}\n        <div className=\"recipes\">\n          { RECIPES }\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default Recipes","import React, { Component } from 'react'\nimport './RecipeCreate.css'\nimport Layout from './shared/Layout'\nimport { Redirect } from 'react-router-dom'\nimport { createRecipe } from '../services/recipe'\n\nclass RecipeCreate extends Component {\n    constructor() {\n        super()\n        this.state = {\n            recipe: {\n                name: '',\n                img: '',\n                ingredients: '',\n                instructions: ''\n            },\n            created: false\n        }\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n        this.setState({\n            recipe: {\n                ...this.state.recipe,\n                [name]: value\n            }\n        })\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault()\n        const created = await createRecipe(this.state.recipe)\n        this.setState({ created })\n    }\n\n    render() {\n        const { recipe, created } = this.state\n\n        if (created) {\n            return <Redirect to={`/recipes`} />\n        }\n        return (\n            <Layout user={this.props.user}>\n                <form className=\"create-form\" onSubmit={this.handleSubmit}>\n                    <input\n                        className=\"input-name\"\n                        placeholder='Name'\n                        value={recipe.name}\n                        name='name'\n                        required\n                        autoFocus\n                        onChange={this.handleChange}\n                    />\n                    {/* <input\n                        className=\"input-price\"\n                        placeholder='Price'\n                        value={product.price}\n                        name='price'\n                        required\n                        onChange={this.handleChange}\n                    /> */}\n                    <input\n                        className=\"input-image-link\"\n                        placeholder='Image Link'\n                        value={recipe.img}\n                        name='img'\n                        required\n                        onChange={this.handleChange}\n                    />\n                    <textarea\n                        className=\"textarea-description\"\n                        // rows={10}\n                        placeholder='Ingredients'\n                        value={recipe.ingredients}\n                        name='ingredients'\n                        required\n                        onChange={this.handleChange}\n                    />\n                    <textarea\n                        className=\"textarea-description\"\n                        // rows={10}\n                        placeholder='Instruction'\n                        value={recipe.instructions}\n                        name='instructions'\n                        required\n                        onChange={this.handleChange}\n                    />\n                \n                    <button type='submit' className=\"submit-button\">Submit</button>\n                </form>\n            </Layout>\n        )\n    }\n}\n\nexport default RecipeCreate","import React, { Component } from 'react'\nimport './RecipeEdit.css'\nimport { Redirect } from 'react-router-dom'\nimport Layout from './shared/Layout'\nimport { getRecipe, updateRecipe } from '../services/recipe'\n\nclass RecipeEdit extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            recipe: {\n              name: '',\n              img: '',\n              ingredients: '',\n              instructions: '',\n            },\n            updated: false\n        }\n    }\n\n    async componentDidMount() {\n        let { id } = this.props.match.params\n        const recipe = await getRecipe(id)\n        this.setState({ recipe })\n    }\n\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n        this.setState({\n            recipe: {\n                ...this.state.recipe,\n                [name]: value\n            }\n        })\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault()\n        let { id } = this.props.match.params\n        const updated = await updateRecipe(id, this.state.recipe)\n        this.setState({ updated })\n    }\n\n    render() {\n\n        const { recipe, updated } = this.state\n\n        if (updated) {\n            return <Redirect to={`/recipes/${this.props.match.params.id}`} />\n        }\n\n        return (\n            <Layout user={this.props.user}>\n                <div className=\"recipe-edit\">\n                    <div className=\"image-container\">\n                        <img className=\"edit-recipe-image\" src={recipe.img} alt={recipe.name} />\n                        <form onSubmit={this.handleSubmit}>\n                            <input\n                                className=\"edit-input-image-link\"\n                                placeholder='Image Link'\n                                value={recipe.img}\n                                name='imgURL'\n                                required\n                                onChange={this.handleChange}\n                            />\n                        </form>\n                    </div>\n                    <form className=\"edit-form\" onSubmit={this.handleSubmit}>\n                        <input\n                            className=\"input-name\"\n                            placeholder='Name'\n                            value={recipe.name}\n                            name='name'\n                            required\n                            autoFocus\n                            onChange={this.handleChange}\n                        />\n                        {/* <input\n                            className=\"input-price\"\n                            placeholder='Price'\n                            value={recipe.price}\n                            name='price'\n                            required\n                            onChange={this.handleChange}\n                        />\n                        <textarea\n                            className=\"textarea-description\"\n                            // rows={10}\n                            // cols={78}\n                            placeholder='Description'\n                            value={recipe.description}\n                            name='description'\n                            required\n                            onChange={this.handleChange}\n                        /> */}\n                        <button type='submit' className=\"save-button\">Save</button>\n                    </form>\n                </div>\n            </Layout>\n        )\n    }\n}\n\nexport default RecipeEdit","import React, { Component } from 'react'\nimport './RecipeDetail.css'\nimport Layout from './shared/Layout'\nimport { getRecipe, deleteRecipe } from '../services/recipe'\nimport { Link } from 'react-router-dom'\n\nclass RecipeDetail extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            recipe: {\n                name: '',\n                img: '',\n                ingredients: '',\n                instructions: '',\n            }\n        }\n    }\n\n    async componentDidMount() {\n        let { id } = this.props.match.params\n        const recipe = await getRecipe(id)\n        this.setState({ recipe })\n    }\n\n    render() {\n        const { recipe } = this.state\n        return (\n            <Layout user={this.props.user}>\n                <div className=\"recipe-detail\">\n                    <img className=\"recipe-detail-image\" src={recipe.img} alt={recipe.name} />\n                    <div className=\"detail\">\n                        <div className=\"name\">{recipe.name}</div>\n                        <div className=\"description\">{recipe.description}</div>\n                        <div className=\"button-container\">\n                        <button className=\"edit-button\"><Link className=\"edit-link\" to={`/recipes/${recipe._id}/edit`}>Edit</Link></button>\n                            <button className=\"delete-button\" onClick={() => deleteRecipe(recipe._id)}>Delete</button>\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\n\nexport default RecipeDetail\n","import api from './apiConfig'\n\nexport const signUp = async credentials => {\n    try {\n        const resp = await api.post('/sign-up', credentials)\n        localStorage.setItem('token', resp.data.token)\n        return resp.data\n    } catch (error) {\n        throw error\n    }\n}\n\nexport const signIn = async credentials => {\n    try {\n        const resp = await api.post('/sign-in', credentials)\n        localStorage.setItem('token', resp.data.token)\n        return resp.data\n    } catch (error) {\n        throw error\n    }\n}\n\nexport const signOut = async user => {\n    try {\n        await localStorage.clear()\n        return true\n    } catch (error) {\n        throw error\n    }\n}\n\nexport const changePassword = async (passwords, user) => {\n    try {\n        const resp = await api.post('/')\n        return resp.data\n    } catch (error) {\n        throw error\n    }\n}\n\nexport const verifyUser = async () => {\n    const token = localStorage.getItem('token')\n    if (token) {\n        const res = await api.get('/verify')\n        return res.data\n    }\n    return false\n}","import React, { Component } from 'react'\nimport './SignUp.css'\nimport { signUp, signIn } from '../services/user'\n\nclass SignUp extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            username: '',\n            password: '',\n            passwordConfirmation: '',\n            isError: false,\n            errorMsg: ''\n        }\n    }\n\n    handleChange = event =>\n        this.setState({\n            [event.target.name]: event.target.value,\n            isError: false,\n            errorMsg: ''\n        })\n\n    onSignUp = event => {\n        event.preventDefault()\n\n        const { history, setUser } = this.props\n\n        signUp(this.state)\n            .then(() => signIn(this.state))\n            .then(res => setUser(res.user))\n            .then(() => history.push('/'))\n            .catch(error => {\n                console.error(error)\n                this.setState({\n                    username: '',\n                    password: '',\n                    passwordConfirmation: '',\n                    isError: true,\n                    errorMsg: 'Sign Up Details Invalid'\n                })\n            })\n    }\n\n    renderError = () => {\n        const toggleForm = this.state.isError ? 'danger' : ''\n        if (this.state.isError) {\n            return (\n                <button type=\"submit\" className={toggleForm}>\n                    {this.state.errorMsg}\n                </button>\n            )\n        } else {\n            return <button type=\"submit\">Sign Up</button>\n        }\n    }\n\n    render() {\n        const { email, username, password, passwordConfirmation } = this.state\n\n        return (\n            <div className=\"form-container\">\n                <h3>Sign Up</h3>\n                <form onSubmit={this.onSignUp}>\n                    <label>Username</label>\n                    <input\n                        required\n                        type=\"text\"\n                        name=\"username\"\n                        value={username}\n                        placeholder=\"Enter username\"\n                        onChange={this.handleChange}\n                    />\n                    {/* <label>Email address</label>\n                    <input\n                        required\n                        type=\"email\"\n                        name=\"email\"\n                        value={email}\n                        placeholder=\"Enter email\"\n                        onChange={this.handleChange}\n                    /> */}\n                    <label>Password</label>\n                    <input\n                        required\n                        name=\"password\"\n                        value={password}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        onChange={this.handleChange}\n                    />\n                    <label>Password Confirmation</label>\n                    <input\n                        required\n                        name=\"passwordConfirmation\"\n                        value={passwordConfirmation}\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        onChange={this.handleChange}\n                    />\n                    {this.renderError()}\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SignUp","\nimport React, { Component } from 'react'\nimport './SignIn.css'\nimport { signIn } from '../services/user'\n\nclass SignIn extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            username: '',\n            password: '',\n            isError: false,\n            errorMsg: ''\n        }\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value,\n            isError: false,\n            errorMsg: ''\n        })\n    }\n\n    onSignIn = event => {\n        event.preventDefault()\n\n        const { history, setUser } = this.props\n\n        signIn(this.state)\n            .then(res => {\n                setUser(res.user)\n            })\n            .then(() => history.push('/'))\n            .catch(error => {\n                console.error(error)\n                this.setState({\n                    isError: true,\n                    errorMsg: 'Invalid Credentials',\n                    username: '',\n                    password: ''\n                })\n            })\n    }\n\n    renderError = () => {\n        const toggleForm = this.state.isError ? 'danger' : ''\n        if (this.state.isError) {\n            return (\n                <button type=\"submit\" className={toggleForm}>\n                    {this.state.errorMsg}\n                </button>\n            )\n        } else {\n            return <button type=\"submit\">Sign In</button>\n        }\n    }\n\n    render() {\n        const { username, password } = this.state\n\n        return (\n            <div className=\"form-container\">\n                <h3>Sign In</h3>\n                <form onSubmit={this.onSignIn}>\n                    <label>Username</label>\n                    <input\n                        required\n                        type=\"text\"\n                        name=\"username\"\n                        value={username}\n                        placeholder=\"Enter Username\"\n                        onChange={this.handleChange}\n                    />\n                    <label>Password</label>\n                    <input\n                        required\n                        name=\"password\"\n                        value={password}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        onChange={this.handleChange}\n                    />\n                    {this.renderError()}\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SignIn","import { Component } from 'react'\nimport { signOut } from '../services/user'\n\nclass SignOut extends Component {\n    componentDidMount() {\n        const { history, clearUser, user } = this.props\n        signOut(user)\n            .then(() => clearUser())\n            .finally(() => history.push('/'))\n    }\n\n    render() {\n        return ''\n    }\n}\n\nexport default SignOut","import React, { Component } from 'react'\nimport './App.css'\nimport Home from './components/Home'\nimport Recipes from './components/Recipes'\nimport RecipeCreate from './components/RecipeCreate'\nimport RecipeEdit from './components/RecipeEdit'\nimport RecipeDetail from './components/RecipeDetail'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { verifyUser } from './services/user'\nimport SignUp from './components/SignUp'\nimport SignIn from './components/SignIn'\nimport SignOut from './components/SignOut'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      user: null\n    }\n  }\n\n  async componentDidMount() {\n    const user = await verifyUser()\n    if (user) {\n      this.setState({ user })\n    }\n  }\n\n  setUser = user => this.setState({ user })\n\n  clearUser = () => this.setState({ user: null })\n\n  render() {\n    const { setUser, clearUser } = this\n    const { user } = this.state\n    return (\n      <div className=\"app\">\n        <Switch>\n          <Route exact path=\"/\" render={() => <Home user={user} />} />\n          <Route exact path=\"/sign-up\" render={props => <SignUp setUser={setUser} history={props.history} />} />\n          <Route exact path=\"/sign-in\" render={props => <SignIn setUser={setUser} history={props.history} />} />\n          <Route exact path=\"/sign-out\" render={props => <SignOut user={user} clearUser={clearUser} history={props.history} />} />\n          <Route exact path=\"/recipes\" render={() => <Recipes user={user} />} />\n          <Route  exact path=\"/add-recipe\" render={() => user ? <RecipeCreate user={user} /> : <Redirect to='/signup' />}/>\n          <Route  exact path=\"/recipes/:id/edit\" render={(props) => user ? <RecipeEdit { ...props } user={user} /> : <Redirect to='/' />}/>\n          <Route exact path=\"/recipes/:id\" render={(props) => <RecipeDetail { ...props } history={props.history} user={user}/>} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}